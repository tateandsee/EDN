#!/usr/bin/env tsx

/**
 * Enhanced Image Generation Script
 * Generated by Immediate Image Fix System
 * 
 * This script contains all the enhanced prompts and configurations
 * for generating high-quality images with proper nudity, nipple inpainting,
 * and diverse attire.
 */

import { PrismaClient } from '@prisma/client'
import ZAI from 'z-ai-web-dev-sdk'
import fs from 'fs'
import path from 'path'

const prisma = new PrismaClient()

// Enhanced prompt library
const PROMPT_LIBRARY = {
  "nsfwFullNude": {
    "positive": "(masterpiece, photorealistic, best quality, ultra detailed, 8k:1.4), RAW photo, professional photography, a stunningly beautiful woman, ((completely naked, totally nude, absolutely no clothing:1.8)), (bare breasts fully exposed:1.7), (visible nipples and areolas:1.6), (no bra, no underwear, no fabric:1.8), (perfect female anatomy:1.6), (natural breast shape:1.5), (perky nipples:1.4), toned physique, flawless skin texture, professional studio lighting, cinematic lighting, sharp focus, ultra-detailed skin texture",
    "negative": "bra, underwear, panties, lingerie, clothing, fabric, textile, shirt, dress, covered, hidden, obscured, concealed, white bra, basic underwear, simple bra, plain underwear, any clothing, any coverings"
  },
  "nsfwSemiNude": {
    "positive": "(masterpiece, photorealistic, best quality, ultra detailed, 8k:1.4), RAW photo, a stunningly beautiful woman, sheer elegant outfit, ((nipples clearly visible through clothing:1.7)), (areola impression through fabric:1.6), (natural breast shape defined:1.5), perfect feminine anatomy, flawless skin, very large surgically enhanced breasts, perfectly proportioned augmented breasts, soft backlighting, professional studio lighting, sharp focus, ultra-detailed skin texture",
    "negative": "fully covered, opaque fabric, hidden breasts, no nipple visibility, concealed nipples, white bra, plain underwear, basic lingerie"
  },
  "sfwDiverseAttire": {
    "positive": "(masterpiece, photorealistic, best quality, ultra detailed, 8k:1.4), RAW photo, a stunningly beautiful woman, elegant floor-length evening gown, sophisticated design, high fashion, ((subtle nipple visibility through fabric:1.6)), (natural breast contour under clothing:1.5), perfect feminine anatomy, flawless skin, realistic pores, natural texture, very large surgically enhanced breasts, perfectly proportioned augmented breasts, toned physique, professional studio lighting, cinematic lighting, sharp focus, natural skin texture",
    "negative": "white bra, plain bra, basic underwear, white underwear, simple lingerie, bra showing, visible bra lines, basic bra, ordinary underwear, generic lingerie, plain white bra, basic white underwear"
  }
}

async function generateEnhancedImages() {
  console.log('🎨 Starting enhanced image generation...')
  
  const zai = await ZAI.create()
  
  try {
    const items = await prisma.marketplaceItem.findMany({
      where: { status: 'ACTIVE' },
      orderBy: { createdAt: 'desc' }
    })

    console.log(`📋 Found ${items.length} items to process`)

    for (const item of items) {
      try {
        console.log(`🔄 Processing: ${item.title}`)
        
        // Use the enhanced prompts from the database
        const prompt = item.positivePrompt || PROMPT_LIBRARY.sfwDiverseAttire.positive
        const negativePrompt = item.negativePrompt || PROMPT_LIBRARY.sfwDiverseAttire.negative
        
        // Generate new image
        const timestamp = Date.now()
        const randomId = Math.random().toString(36).substring(2, 8)
        const category = item.isNsfw ? 'nsfw' : 'sfw'
        const imageName = `${category}-enhanced-${timestamp}-${randomId}.jpg`
        const imagePath = path.join(process.cwd(), 'public', 'marketplace-images', 'enhanced', imageName)
        
        const response = await zai.images.generations.create({
          prompt: prompt,
          size: '1024x1024',
          quality: 'hd'
        })

        if (response.data && response.data[0] && response.data[0].base64) {
          const imageBuffer = Buffer.from(response.data[0].base64, 'base64')
          
          const dir = path.dirname(imagePath)
          if (!fs.existsSync(dir)) {
            fs.mkdirSync(dir, { recursive: true })
          }
          
          fs.writeFileSync(imagePath, imageBuffer)
          
          const imageUrl = `/marketplace-images/enhanced/${imageName}`
          
          await prisma.marketplaceItem.update({
            where: { id: item.id },
            data: {
              thumbnail: imageUrl,
              images: JSON.stringify([imageUrl])
            }
          })
          
          console.log(`✅ Generated enhanced image for: ${item.title}`)
        }
        
        // Delay to avoid rate limiting
        await new Promise(resolve => setTimeout(resolve, 3000))
        
      } catch (error) {
        console.error(`❌ Failed to process ${item.title}:`, error.message)
      }
    }
    
    console.log('🎉 Enhanced image generation complete!')
    
  } catch (error) {
    console.error('❌ Error in generateEnhancedImages:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// Run if called directly
if (require.main === module) {
  generateEnhancedImages()
}
