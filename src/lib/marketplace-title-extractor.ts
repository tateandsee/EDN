/**
 * Marketplace Title Extractor
 * 
 * This module provides functions to extract and generate titles
 * from marketplace item data, particularly prompt-related information.
 */

export interface TitleExtractionResult {
  suggestedTitle: string
  category: string
  keywords: string[]
  confidence: number
}

export interface MarketplaceItemData {
  title?: string | null
  description?: string | null
  tags?: string[] | null
  promptConfig?: any
  positivePrompt?: string | null
  negativePrompt?: string | null
  type?: string | null
  category?: string | null
}

/**
 * Generate a title from prompt data
 */
export function generateTitleFromPrompt(
  promptConfig: any,
  positivePrompt?: string,
  negativePrompt?: string
): TitleExtractionResult {
  const keywords: string[] = []
  let suggestedTitle = 'EDN AI Model'
  let category = 'MODELS'
  let confidence = 0.5

  // Extract from prompt config
  if (promptConfig) {
    if (promptConfig.archetype) {
      keywords.push(promptConfig.archetype)
      suggestedTitle = `EDN ${promptConfig.archetype}`
      confidence = 0.8
    }
    
    if (promptConfig.hairColor) {
      keywords.push(promptConfig.hairColor)
      if (suggestedTitle === 'EDN AI Model') {
        suggestedTitle = `EDN ${promptConfig.hairColor} Model`
      } else {
        suggestedTitle += ` - ${promptConfig.hairColor}`
      }
      confidence = 0.9
    }
    
    if (promptConfig.hairStyle) {
      keywords.push(promptConfig.hairStyle)
      if (suggestedTitle.includes('Model')) {
        suggestedTitle += ` ${promptConfig.hairStyle}`
      }
      confidence = 0.95
    }
  }

  // Extract from positive prompt
  if (positivePrompt) {
    const promptKeywords = extractKeywords(positivePrompt)
    keywords.push(...promptKeywords)
    
    if (suggestedTitle === 'EDN AI Model' && promptKeywords.length > 0) {
      suggestedTitle = `EDN ${promptKeywords[0]}`
      confidence = 0.7
    }
  }

  return {
    suggestedTitle,
    category,
    keywords,
    confidence
  }
}

/**
 * Extract title information from marketplace item
 */
export function extractTitleFromMarketplaceItem(item: MarketplaceItemData): {
  displayTitle: string
  isAutoGenerated: boolean
} {
  // If the item has explicit title and doesn't look auto-generated, use it
  if (item.title && !item.title.startsWith('EDN ')) {
    return {
      displayTitle: item.title,
      isAutoGenerated: false
    }
  }

  // Try to generate from prompt data
  if (item.promptConfig || item.positivePrompt) {
    const result = generateTitleFromPrompt(
      item.promptConfig,
      item.positivePrompt,
      item.negativePrompt
    )
    
    return {
      displayTitle: result.suggestedTitle,
      isAutoGenerated: true
    }
  }

  // Fallback to existing title or generate generic one
  return {
    displayTitle: item.title || 'EDN AI Model',
    isAutoGenerated: item.title?.startsWith('EDN ') || false
  }
}

/**
 * Extract keywords from text
 */
function extractKeywords(text: string): string[] {
  const commonWords = ['the', 'a', 'an', 'and', 'or', 'but', 'in', 'on', 'at', 'to', 'for', 'of', 'with', 'by']
  const words = text.toLowerCase()
    .replace(/[^\w\s]/g, '')
    .split(/\s+/)
    .filter(word => word.length > 2 && !commonWords.includes(word))
  
  // Get unique words
  const uniqueWords = [...new Set(words)]
  
  // Return first 5 most relevant keywords
  return uniqueWords.slice(0, 5)
}